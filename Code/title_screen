#include <FEHLCD.h>
#include <FEHImages.h>
#include <FEHUtility.h>

void welcome();
void header();
//void buttons();
void start_screen();
void credit_screen();
void stats_screen();
void rules_screen();
void createScreen(const char* imageFilename);


int main(void)
{    
    welcome();
    header();
    //buttons();

    /*LCD.DrawRectangle(70,179,30,13);
    LCD.DrawRectangle(120,179,30,13);
    LCD.DrawRectangle(170,179,30,13);
    LCD.DrawRectangle(220,179,30,13);*/

    int x_coord, y_coord;

    while(true)
    {
        // Waits for click
        while(!LCD.Touch(&x_coord, &y_coord)){}

        // Waits for release
        while(LCD.Touch(&x_coord, &y_coord)){}

        //LCD.WriteLine("Touch coordinates: X=" + std::to_string(x_coord) + ", Y=" + std::to_string(y_coord));

        // If the click coordinates are within the button, (does stuff)
        if(x_coord>=67 && x_coord<=104 && y_coord<=191 && y_coord>=179)
        {
            start_screen();
            //LCD.WriteLine("start");
            LCD.Update();
        }
        else if (x_coord>=117 && x_coord<=154 && y_coord<=191 && y_coord>=179)
        {
            stats_screen();
            //LCD.WriteLine("stats");
            LCD.Update(); //Never quit s
        }
        else if (x_coord>=167 && x_coord<=204 && y_coord<=191 && y_coord>=179)
        {
            rules_screen();
            //LCD.WriteLine("rules");
            LCD.Update(); //Never quit s
        }
        else if (x_coord>=217 && x_coord<=254 && y_coord<=191 && y_coord>=179)
        {
            credit_screen();
            //LCD.WriteLine("credit");
            LCD.Update(); //Never quit s
        }
    }

    while(1) 
    {
        LCD.Update(); //Never quit s
    }
    return 0;

}

void welcome()
{
    FEHImage titlePage("Title Page.png");
    titlePage.Draw(0,0);
}


void header()
{
    FEHImage start;
    start.Open("start.png");
    start.Draw(-70,80);
    
    FEHImage stats;
    stats.Open("stats.png");
    stats.Draw(-20,105);

    FEHImage rules;
    rules.Open("rules.png");
    rules.Draw(30,54);

    FEHImage credit;
    credit.Open("credit.png");
    credit.Draw(80,29);
}

/*void handleButtons(float a, float b, FEHIcon::Icon& button, void Screen())
{
    if (button.Pressed(a,b,0))
    {
        button.WhilePressed(a,b);
        button.Deselect();
        Screen();
    }
}*/

void createScreen(const char* imageFilename)
{
    FEHImage screen;
    screen.Open(imageFilename);  // Load the screen image from the given file
    screen.Draw(0, 0);  // Draw the image at the specified position
}

void start_screen()
{
    createScreen("background.png");  // Call the generic function with the inventory screen image
    createScreen("bar.png");  // Call the generic function with the inventory screen image
}

void credit_screen()
{
    createScreen("inventoryScreen.png");  // Call the generic function with the inventory screen image
}

void stats_screen()
{
    createScreen("inventoryScreen.png");  // Call the generic function with the inventory screen image
}

void rules_screen()
{
    createScreen("inventoryScreen.png");  // Call the generic function with the inventory screen image
}
