#include <FEHLCD.h>
#include <FEHImages.h>
#include <FEHUtility.h>

class v1plant
{
    public:
    //game mechanics functions
    void type(); //based on selection
    void sell();//if sold, reverts to a pot, type and status resets

    //all drawing functions
    void plant_seed();
    void plant();
    void plant_sick();
    void plant_overgrown();
    void plant_dead();
    void plant_initialize();
    void plant_cycle();
    void settime();

    int xcoord = 0, ycoord = 0;//fixed
    float drytime;
    float overgrowntime;

    private:
    enum class plantstate
    {
        SEED,
        PLANT,
        DRY,
        OVERGROWN,
        DEAD
    };

    plantstate state;
};
//when called, do plant[10] for 10 plants in view 1

int main(void)
{    
    v1plant plants [5];
    plants[0].xcoord = 0;
    plants[0].ycoord = 0;
    plants[0].plant_initialize();

    plants[1].xcoord = -30;
    plants[1].ycoord = 0;
    plants[1].plant_initialize();

    plants[2].xcoord = -60;
    plants[2].ycoord = 0;
    plants[2].plant_initialize();

    plants[3].xcoord = -90;
    plants[3].ycoord = 0;
    plants[3].plant_initialize();

    plants[4].xcoord = -120;
    plants[4].ycoord = 0;
    plants[4].plant_initialize();

    plants[0].settime();
    plants[1].settime();
    plants[2].settime();
    plants[3].settime();
    plants[4].settime();

    while (true)
    {
        plants[0].plant_cycle();
        plants[1].plant_cycle();
        plants[2].plant_cycle();
        plants[3].plant_cycle();
        plants[4].plant_cycle();
        LCD.Update(); //Never quits
    }
    return 0;

}

void v1plant::settime()
{
    drytime = TimeNow();
    overgrowntime = TimeNow();
}

void v1plant:: plant_seed()
{
    FEHImage seed;
    seed.Open("seed.png");
    seed.Draw(xcoord,ycoord);
}

void v1plant::plant()
{
    FEHImage plant;
    plant.Open("plant.png");
    plant.Draw(xcoord,ycoord);
}
void v1plant:: plant_sick()
{
    FEHImage sick;
    sick.Open("dryplant.png");
    sick.Draw(xcoord,ycoord);
}
void v1plant:: plant_overgrown()
{
    FEHImage overgrown;
    overgrown.Open("trimplant.png");
    overgrown.Draw(xcoord,ycoord);
}
void v1plant:: plant_dead()
{
    //LCD.Clear();
    FEHImage dead;
    dead.Open("pot.png");
    dead.Draw(xcoord,ycoord);
}
void v1plant:: plant_initialize()
{
    float init_t = TimeNow();

    state = plantstate::SEED;
    plant_seed();
    LCD.Update();
    while ((TimeNow()-init_t)<=5){}
    plant();
    LCD.Update();
    state = plantstate::PLANT;

    //drytime = TimeNow();
    //overgrowntime = TimeNow();
}

void v1plant::plant_cycle()
{
    printf("%d\n", state);
    
    if (state != plantstate::DEAD)
    {
        switch (state)
        {
            case plantstate::PLANT:
            {
                if ((TimeNow()-drytime)>5)
                {
                    plant_sick();
                    LCD.Update();
                    state = plantstate::DRY;
                }
                else if ((TimeNow()-overgrowntime)>15)
                {
                    plant_overgrown();
                    LCD.Update();
                    state = plantstate::OVERGROWN;
                }
                break;
            }
            case plantstate::DRY:
            {
                if ((TimeNow()-drytime)<=10)
                {
                    int xClick, yClick;
                    //while(!LCD.Touch(&xClick, &yClick)){}
                    if (LCD.Touch(&xClick, &yClick))
                    {
                        // If the click coordinates are within the pot, plant is healthy again
                        if (xClick>=(xcoord+150) && xClick<=(xcoord+170) && yClick<=(ycoord+115) && yClick>=(ycoord+100))
                        {
                            drytime = TimeNow();
                            plant();
                            LCD.Update();
                            state = plantstate::PLANT;
                        }
                    }
                }

                if ((TimeNow()-drytime)>10)
                {
                    //LCD.Clear();
                    plant_dead();
                    LCD.Update();
                    state = plantstate::DEAD;
                    break;
                }
                break;
            }
            case plantstate::OVERGROWN:
            {
                if ((TimeNow()-overgrowntime)<=20)
                {
                    int xClick, yClick;
                    //while(!LCD.Touch(&xClick, &yClick)){}
                    if (LCD.Touch(&xClick, &yClick))
                    {
                        // If the click coordinates are within the pot, plant is healthy again
                        if (xClick>=(xcoord+150) && xClick<=(xcoord+170) && yClick<=(ycoord+115) && yClick>=(ycoord+100))
                        {
                            overgrowntime = TimeNow();
                            plant();
                            LCD.Update();
                            state = plantstate::PLANT;
                        }
                    }
                }

                if ((TimeNow()-overgrowntime)>20)
                {
                    //LCD.Clear();
                    plant_dead();
                    LCD.Update();
                    state = plantstate::DEAD;
                }
                break;
            }
        }
    }

}

//right now, after clicking the pot once, nothing happens

//logic: dry+overgrown time starts

//loop starts

//dry time > 5, warning
//if you click before dry time > 10, dry time resets, otherwise dead

//overgrown time > 15, warning
//if you click before overgrown time > 20, overgrown time resets, otherwise dead

//this is continue until dead
